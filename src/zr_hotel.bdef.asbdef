managed;
strict( 2 );
with draft;

define behavior for ZR_HOTEL alias hotel
implementation in class zbp_r_hotel unique
persistent table zhotel
draft table zhotel_d
lock master total etag LastChangedAt
etag master LocalLastChangedAt
authorization master ( instance )
{
  create;
  update;
  delete;

  field ( numbering : managed, readonly ) HotelId;
  field( mandatory ) Name;
  field ( readonly ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  association _Clients { create; with draft;}
  association _Reservations { create; with draft; }
  association _Rooms { create; with draft; }

  determination SetDefaultCity on modify { create; field City; }

  validation ValidateName on save { create; update; }
  validation ValidateStars on save { create; update; }
  validation ValidateTlf on save {create; update; }

  action deleteAll_Reservations parameter ZR_DELETE_ENTITY ;
  factory action copyHotel [1];

  side effects { action deleteAll_Reservations affects entity _Reservations; }

draft determine action Prepare { validation ValidateName; validation ValidateTlf; validation ValidateStars; }
draft action ( features : instance ) Edit;
draft action Activate optimized;
draft action Discard;
draft action Resume;

 mapping for zhotel {
    HotelId             = hotel_id;
    Name                = name;
    Street              = street;
    StreetNumber        = street_number;
    City                = city;
    Stars               = stars;
    Telephone           = telephone;
    CreatedBy           = created_by;
    CreatedAt           = created_at;
    LocalLastChangedBy  = local_last_changed_by;
    LocalLastChangedAt  = local_last_changed_at;
    LastChangedAt       = last_changed_at;
 }

}

define behavior for ZR_ROOM alias Rooms
implementation in class zbp_r_rooms unique
persistent table zrooms
draft table zrooms_d
lock dependent by _Hotel
etag master LocalLastChangedAt
authorization dependent by _Hotel
{
  update ( features : instance );
  delete ( features : instance );

  association _Hotel { with draft; }

  field ( numbering : managed, readonly ) RoomId;
  field ( readonly ) HotelId;
  field ( readonly  ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  determination SetDefaultRoomType on modify { create; field RoomType; }
  determination SetDefaultStatus on modify { create; field Status; }
  determination setDefaultBasePrice on modify { field RoomType; }

  validation ValidateStatus on save {create; update; }
  validation ValidateRoomType on save {create; update; }
  validation ValidateRoomNumber on save { create; update; }

  side effects { field RoomType affects field BasePrice; }

  action ( features : instance ) outOfService result [1] $self;
  action ( features : instance ) available result [1] $self;

  mapping for zrooms {
    RoomId              = room_id;
    HotelId             = hotel_id;
    RoomType            = room_type;
    RoomNumber          = room_number;
    BasePrice           = base_price;
    CurrencyCode = currency_code;
    Status              = status;
    Attachment = attachment;
    MimeType = mime_type;
    FileName = file_name;
    CreatedBy           = created_by;
    CreatedAt           = created_at;
    LocalLastChangedBy  = local_last_changed_by;
    LocalLastChangedAt  = local_last_changed_at;
    LastChangedAt       = last_changed_at;
  }

}

define behavior for ZR_RESERVATIONS alias Reservations
implementation in class zbp_r_reservations unique
persistent table zreservations
draft table zreservations_d
lock dependent by _Hotel
etag master LocalLastChangedAt
authorization dependent by _Hotel
{
  update ( features : instance );
  delete ( features : instance );

  association _Hotel { with draft; }

  field ( numbering : managed, readonly ) ReservationId;
  field ( readonly ) HotelId;
  field ( readonly  ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  association _Host { create; with draft; }

  determination SetDefaultReservationStatus on modify { create; field ReservationStatus; }
  determination setTotalPrice on modify { create; field RoomId; }

//  determination SaveTotalPrice on save { create; update; }
  validation ValidateReservationStatus on save {create; update; }
  validation ValidateDate on save {create; update; }
  validation ValidateCardNumber on save { create; update; } //just if status is confirmed
  validation ValidateHosts on save { create; update; }
  validation ValidateClient on save { create; update; }
  validation ValidateRooms on save { create; update; }
  validation ValidateReservationClients on save { create; update; }
  validation ValidateRoomStatus on save { create; update; }
  validation ValidateClientExistance on save { create; update; }
  validation ValidateRoomsExistance on save { create; update; }

  action ( features : instance ) acceptReservation result [1] $self;
  action ( features : instance ) rejectReservation result [1] $self;
  action deductDiscount parameter /dmo/a_travel_discount result [1] $self;

  side effects {
    field roomId affects field TotalPrice;
    entity _Host affects field TotalPrice;
  }

  mapping for zreservations {
    ReservationId       = reservation_id;
    ClientId            = client_id;
    RoomId              = room_id;
    RoomNumber = room_number;
    CardNumber = card_number;
    HotelId             = hotel_id;
    StartDate           = start_date;
    EndDate             = end_date;
    TotalPrice          = total_price;
    CurrencyCode = currency_code;
    ReservationStatus   = reservation_status;
    CreatedBy           = created_by;
    CreatedAt           = created_at;
    LocalLastChangedBy  = local_last_changed_by;
    LocalLastChangedAt  = local_last_changed_at;
    LastChangedAt       = last_changed_at;
  }

}

define behavior for ZR_CLIENT alias Clients
implementation in class zbp_r_client unique
persistent table zclient
draft table zclient_d
lock dependent by _Hotel
etag master LocalLastChangedAt
authorization dependent by _Hotel
{
  update;
  delete;

  association _Hotel { with draft; }
  association _Cards { create; with draft; }

  field ( mandatory ) DniPass;
  field ( numbering : managed ) ClientId;
  field ( readonly ) HotelId;
  field ( readonly  ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  validation ValidateTlf on save {create; update; }
  validation ValidateEmail on save {create; update; }
  validation ValidateDni on save {create; update; }

  mapping for zclient {
    ClientId           = client_id;
    HotelId            = hotel_id;
    Name               = name;
    Email              = email;
    Telephone          = telephone;
    DniPass            = dni_pass;
    CreatedBy          = created_by;
    CreatedAt          = created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt      = last_changed_at;
  }

}

//It is actually Guests not hosts
define behavior for ZR_HOSTS alias Host
implementation in class zbp_r_hosts unique
persistent table zhosts
draft table zhosts_d
lock dependent by _Hotel
etag master LocalLastChangedAt
authorization dependent by _Hotel
{
  update;
  delete;

  association _Reservation { with draft; }
  association _Hotel { with draft; }

  field ( readonly, numbering : managed ) HostId;
  field ( readonly ) ReservationId, HotelId;
  field ( mandatory:create, readonly:update ) ClientId;
  field ( readonly  ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  validation ValidateHostsClients on save { create; update; }
  validation ValidateDuplicateGuest on save { create; update; }

  mapping for zhosts {
    HostId             = host_id;
    ClientId           = client_id;
    HotelId            = hotel_id;
    ReservationId      = reservation_id;
    CreatedBy          = created_by;
    CreatedAt          = created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt      = last_changed_at;
  }

}

define behavior for ZR_CARDS alias Cards
implementation in class zbp_r_cards unique
persistent table zclient_cards
draft table zclient_cards_d
lock dependent by _Hotel
etag master LocalLastChangedAt
authorization dependent by _Hotel
{
  update;
  delete;

  association _Client { with draft; }
  association _Hotel { with draft; }

  field ( readonly ) ClientId, HotelId;
  field ( readonly  ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  mapping for zclient_cards {
    ClientId           = client_id;
    CardNumber         = card_number;
    CardType           = card_type;
    CreatedBy          = created_by;
    CreatedAt          = created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt      = last_changed_at;
  }

}