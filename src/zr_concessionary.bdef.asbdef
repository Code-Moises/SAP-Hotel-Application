managed;
strict( 2 );
with draft;

define behavior for ZR_CONCESSIONARY alias concessionary
implementation in class zbp_r_concessionary unique
persistent table zconcessionary
draft table zconcessionary_d
lock master total etag LastChangedAt
etag master LocalLastChangedAt
authorization master (instance)
{
  field ( mandatory ) Name;

  field ( numbering : managed, readonly ) ConcessionaryId;
  field ( readonly ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;


  create;
  update;
  delete;
  association _Cars { create; with draft; }

  determination SetDefaultCity on modify { create; field City; }
  determination SetZipCode on modify { field City; }

  side effects { field City affects field ZipCode; }

  validation ErrorTlf on save {create; update; }
  validation ErrorName on save { create; update; }


draft determine action Prepare { validation ErrorTlf; validation ErrorName; }
draft action Edit;
draft action Activate optimized;
draft action Discard;
draft action Resume;


  mapping for zconcessionary {
      ConcessionaryId = concessionary_id;
      Name = name;
      Street = street;
      City = city;
      StreetNumber = street_number;
      Country = country;
      ZipCode = zip_code;
      Cif = cif;
      Telephone = telephone;
      CreatedBy = created_by;
      CreatedAt = created_at;
      LocalLastChangedBy = local_last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      LastChangedAt = last_changed_at;
  }
}

define behavior for ZR_CARS alias Cars
implementation in class zbp_r_cars unique
persistent table zcars
draft table zcars_d
lock dependent by _Concessionary
etag master LocalLastChangedAt
authorization dependent by _Concessionary
{
  update;
  delete;

  association _Concessionary { with draft; }


  field ( numbering : managed, readonly ) CarId;
  field ( readonly ) ConcessionaryId;
  field ( readonly  ) LastChangedAt, LocalLastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  mapping for zcars {
    CarId = car_id;
    ConcessionaryId = concessionary_id;
    ManufacturerId = manufacturer_id;
    Model = model;
    ManufactureDate = manufacture_date;
    Kilometers = kilometers;
    FuelType = fuel_type;
    Hybrid = hybrid;
    Price = price;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

}